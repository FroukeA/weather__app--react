{"ast":null,"code":"import React from\"react\";import handleCreateFormArray from\"./forms/forms\";import{forms}from\"../../constants/conf\";import{forecast_data}from\"../../constants/mock\";import Form from\"../../components/common/blocks/form/Form\";import Input from\"../../components/ui/inputs/Input\";import List from\"../../components/common/blocks/list/List\";import Card from\"../../components/common/blocks/cards/Card\";import Term from\"../../components/common/elements/list/Term\";import TextDiscription from\"../../components/common/elements/list/TextDiscription\";import GroupDiscription from\"../../components/common/blocks/list/GroupDiscription\";import TextItem from\"../../components/common/elements/list/TextItem\";import CustomBoxInput from\"../../components/ui/groups/CustomBoxInput\";import Button from\"../../components/ui/buttons/Button\";var structureCopy=null;export function buidCardContent(content){console.log(\"debug card\",content);}export function renderElementItems(array){return array.map(function(item,i){var todo=null;if(item.data.length===0){// NO data comes from external source, data comes from constants\nif(item.type===\"list\"||item.type===\"discription_group\"){// DOM is a list of any type or group dd\n// render list !!! type = trough props\ntodo=renderComponent(item,i,null);}else if(item.parts.length>0){// Nested DOM\ntodo=/*#__PURE__*/React.createElement(item.element,{key:i,className:createClass(item)},renderElementItems(item.parts));}else{// Single DOM\nif(item.type===\"discription\"||item.type===\"term\"||item.type===\"textItem\"||item.type===\"button\"||item.type===\"customBoxInput\"){return renderComponent(item,i,null);}else{todo=renderElement(item,i,null);}}}else{// data comes from external source, data does NOT come from constants\nif(item.parts[0]!==undefined){var data=forecast_data;if(item.parts.length>0){// Nested DOM\nstructureCopy=item.parts[0];todo=/*#__PURE__*/React.createElement(item.element,{key:i,className:createClass(item)},data.map(function(dataItem,i){// What do we have? data & print of structure. need structure ask custom data and what overide it with data from dataitem\nreturn item.parts[0].type===\"card\"?// before render merge data into structure\ntodo=renderComponent(item.parts[0],\"card\"+i):null;//   handleMerge(structureCopy, dataItem, \"card\")\n// : null;\n}));}}}return todo;});}export function renderElement(item,key){if(item.data.length===0){// NO data comes from external source, data comes from constants\nif(item.type===\"form\"){// DOM is a form\n// collect the form data\nvar array=handleCreateFormArray(forms,null,item.id,null,null,null);// render form\nreturn renderComponent(item,\"form\"+key,array);// return <Form key={\"form\" + key} array={array} />;\n}else if(item.id.includes(\"wi\")){return/*#__PURE__*/ // DOM is a input of any kind\n// render input !!! type = trough props\nReact.createElement(Input,{class:createClass(item),base:item.ref,type:item.type,id:item.id,name:item.id,placeholder:item.label,required:item.required,reference:item.ref,key:\"input\"+key});}else if(item.parts[0]!==undefined){if(item.part[0].type===\"card\"){return(// DOM is a card\n// render card !!! content = interactive created by creatElement\nrenderComponent(item,\"\"));}}else{return/*#__PURE__*/React.createElement(item.element,{key:\"element\"+key,className:createClass(item)},item.label);}}else{// data comes from external source, data does NOT come from constants\nif(item.parts[0]!==undefined){if(item.part[0].type===\"card\"){return(// DOM is a card\n// render card !!! content = interactive created by creatElement\nrenderComponent(item,\"\"));}}}}export function renderComponent(item,key,array){switch(item.type){case\"list\":return/*#__PURE__*/React.createElement(List,{key:\"list\"+key,class:createClass(item),item:item,createElement:createElement.bind(this),createClass:createClass.bind(this)});case\"card\":return/*#__PURE__*/React.createElement(Card,{key:key,class:createClass(item),content:item,createElement:createElement.bind(this),createClass:createClass.bind(this)});case\"form\":return/*#__PURE__*/React.createElement(Form,{key:key,array:array,class:createClass(item)});case\"term\":return/*#__PURE__*/React.createElement(Term,{key:key,item:item,class:createClass(item)});case\"discription\":return/*#__PURE__*/React.createElement(TextDiscription,{key:key,item:item,class:createClass(item)});case\"discription_group\":return/*#__PURE__*/React.createElement(GroupDiscription,{key:key,class:createClass(item),item:item,createElement:createElement.bind(this),createClass:createClass.bind(this)});case\"customBoxInput\":return/*#__PURE__*/React.createElement(CustomBoxInput,{key:key,class:createClass(item),item:item,createElement:createElement.bind(this),createClass:createClass.bind(this),content:item.parts});case\"item\":return/*#__PURE__*/React.createElement(TextItem,{key:key,item:item,class:createClass(item)});case\"button\":return/*#__PURE__*/React.createElement(Button,{key:key,item:item,label:item.label,class:createClass(item)});default:console.log(\"ERROR: no types are matching \".concat(item.type,\".\"));}}export function createElement(item,key){if(item.parts.length>0){// Nested DOM\nif(item.type===\"card\"){return renderComponent(item,\"\",null,null);}else{return/*#__PURE__*/React.createElement(item.element,{key:key,className:createClass(item)},renderElementItems(item.parts));}}else{// Single DOM\nif(item.type===\"discription\"||item.type===\"term\"||item.type===\"textItem\"||item.type===\"button\"||item.type===\"customBoxInput\"){return renderComponent(item,key,null);}else{return renderElement(item,key);}}}// add styling and SCSS\nexport function createClass(item){var c=\"\";if(item.ref){if(item.class.length>0){item.class.forEach(function(e){c=\"\".concat(item.ref,\"__\").concat(item.type,\" \").concat(item.ref,\"__\").concat(item.type,\"--\").concat(e.label);});}else{c=\"\".concat(item.ref,\"__\").concat(item.type);}}else{if(item.class.length>0){item.class.forEach(function(e){c=\"\".concat(item.type,\" \").concat(item.type,\"--\").concat(e.label);});}else{c=\"\".concat(item.type);}}return c;}// add data\nexport function handleMergeElementItems(array,data,key){return array.map(function(item,i){return handleMerge(item,data,key);});}export function handleMergeData(structureElement,data,key){structureElement.label=data.data.day;return createElement(structureCopy,key,\"new data\");}export function handleMerge(structureElement,data,key){if(structureElement.parts.length>0){// nested structure\nif(handleCheckIfNot(structureElement.link,\"\")){// data needed in this layer\nreturn handleMergeData(structureElement,data,key);}else{// NO data needed in this layer\nhandleMergeElementItems(structureElement.parts,data,key);}}else{// single dom\nif(handleCheckIfNot(structureElement.link,\"\")){// data needed in this layer\nhandleMergeData(structureElement,data,key);}else{// NO data needed in this layer\n// renderComponent(structureElement, key);\n}}}export function handleCheckIfNot(element,condition){return element!==condition;}","map":{"version":3,"sources":["/Users/frouie/Documents/GitHub/weather__app--react/src/utils/common/commonUtils.js"],"names":["React","handleCreateFormArray","forms","forecast_data","Form","Input","List","Card","Term","TextDiscription","GroupDiscription","TextItem","CustomBoxInput","Button","structureCopy","buidCardContent","content","console","log","renderElementItems","array","map","item","i","todo","data","length","type","renderComponent","parts","createClass","renderElement","undefined","dataItem","key","id","includes","ref","label","required","part","createElement","bind","c","class","forEach","e","handleMergeElementItems","handleMerge","handleMergeData","structureElement","day","handleCheckIfNot","link","element","condition"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,eAAlC,CAEA,OAASC,KAAT,KAAsB,sBAAtB,CACA,OAASC,aAAT,KAA8B,sBAA9B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,0CAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,kCAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,0CAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,2CAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,4CAAjB,CACA,MAAOC,CAAAA,eAAP,KAA4B,uDAA5B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,sDAA7B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2CAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oCAAnB,CAEA,GAAIC,CAAAA,aAAa,CAAG,IAApB,CAEA,MAAO,SAASC,CAAAA,eAAT,CAAyBC,OAAzB,CAAkC,CACvCC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BF,OAA1B,EACD,CAED,MAAO,SAASG,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACxC,MAAOA,CAAAA,KAAK,CAACC,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CAC5B,GAAIC,CAAAA,IAAI,CAAG,IAAX,CAEA,GAAIF,IAAI,CAACG,IAAL,CAAUC,MAAV,GAAqB,CAAzB,CAA4B,CAC1B;AAEA,GAAIJ,IAAI,CAACK,IAAL,GAAc,MAAd,EAAwBL,IAAI,CAACK,IAAL,GAAc,mBAA1C,CAA+D,CAC7D;AACA;AACAH,IAAI,CAAGI,eAAe,CAACN,IAAD,CAAOC,CAAP,CAAU,IAAV,CAAtB,CACD,CAJD,IAIO,IAAID,IAAI,CAACO,KAAL,CAAWH,MAAX,CAAoB,CAAxB,CAA2B,CAChC;AACAF,IAAI,cACF,oBAAC,IAAD,CAAM,OAAN,EAAc,GAAG,CAAED,CAAnB,CAAsB,SAAS,CAAEO,WAAW,CAACR,IAAD,CAA5C,EACGH,kBAAkB,CAACG,IAAI,CAACO,KAAN,CADrB,CADF,CAKD,CAPM,IAOA,CACL;AACA,GACEP,IAAI,CAACK,IAAL,GAAc,aAAd,EACAL,IAAI,CAACK,IAAL,GAAc,MADd,EAEAL,IAAI,CAACK,IAAL,GAAc,UAFd,EAGAL,IAAI,CAACK,IAAL,GAAc,QAHd,EAIAL,IAAI,CAACK,IAAL,GAAc,gBALhB,CAME,CACA,MAAOC,CAAAA,eAAe,CAACN,IAAD,CAAOC,CAAP,CAAU,IAAV,CAAtB,CACD,CARD,IAQO,CACLC,IAAI,CAAGO,aAAa,CAACT,IAAD,CAAOC,CAAP,CAAU,IAAV,CAApB,CACD,CACF,CACF,CA5BD,IA4BO,CACL;AACA,GAAID,IAAI,CAACO,KAAL,CAAW,CAAX,IAAkBG,SAAtB,CAAiC,CAC/B,GAAMP,CAAAA,IAAI,CAAGtB,aAAb,CACA,GAAImB,IAAI,CAACO,KAAL,CAAWH,MAAX,CAAoB,CAAxB,CAA2B,CACzB;AAEAZ,aAAa,CAAGQ,IAAI,CAACO,KAAL,CAAW,CAAX,CAAhB,CAEAL,IAAI,cACF,oBAAC,IAAD,CAAM,OAAN,EAAc,GAAG,CAAED,CAAnB,CAAsB,SAAS,CAAEO,WAAW,CAACR,IAAD,CAA5C,EACGG,IAAI,CAACJ,GAAL,CAAS,SAACY,QAAD,CAAWV,CAAX,CAAiB,CACzB;AACA,MAAOD,CAAAA,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcF,IAAd,GAAuB,MAAvB,CACH;AACCH,IAAI,CAAGI,eAAe,CAACN,IAAI,CAACO,KAAL,CAAW,CAAX,CAAD,CAAgB,OAASN,CAAzB,CAFpB,CAGH,IAHJ,CAIA;AACA;AACD,CARA,CADH,CADF,CAaD,CACF,CACF,CAED,MAAOC,CAAAA,IAAP,CACD,CA1DM,CAAP,CA2DD,CAED,MAAO,SAASO,CAAAA,aAAT,CAAuBT,IAAvB,CAA6BY,GAA7B,CAAkC,CACvC,GAAIZ,IAAI,CAACG,IAAL,CAAUC,MAAV,GAAqB,CAAzB,CAA4B,CAC1B;AACA,GAAIJ,IAAI,CAACK,IAAL,GAAc,MAAlB,CAA0B,CACxB;AACA;AACA,GAAMP,CAAAA,KAAK,CAAGnB,qBAAqB,CACjCC,KADiC,CAEjC,IAFiC,CAGjCoB,IAAI,CAACa,EAH4B,CAIjC,IAJiC,CAKjC,IALiC,CAMjC,IANiC,CAAnC,CASA;AACA,MAAOP,CAAAA,eAAe,CAACN,IAAD,CAAO,OAASY,GAAhB,CAAqBd,KAArB,CAAtB,CACA;AACD,CAfD,IAeO,IAAIE,IAAI,CAACa,EAAL,CAAQC,QAAR,CAAiB,IAAjB,CAAJ,CAA4B,CACjC,oBACE;AACA;AACA,oBAAC,KAAD,EACE,KAAK,CAAEN,WAAW,CAACR,IAAD,CADpB,CAEE,IAAI,CAAEA,IAAI,CAACe,GAFb,CAGE,IAAI,CAAEf,IAAI,CAACK,IAHb,CAIE,EAAE,CAAEL,IAAI,CAACa,EAJX,CAKE,IAAI,CAAEb,IAAI,CAACa,EALb,CAME,WAAW,CAAEb,IAAI,CAACgB,KANpB,CAOE,QAAQ,CAAEhB,IAAI,CAACiB,QAPjB,CAQE,SAAS,CAAEjB,IAAI,CAACe,GARlB,CASE,GAAG,CAAE,QAAUH,GATjB,EAHF,CAeD,CAhBM,IAgBA,IAAIZ,IAAI,CAACO,KAAL,CAAW,CAAX,IAAkBG,SAAtB,CAAiC,CACtC,GAAIV,IAAI,CAACkB,IAAL,CAAU,CAAV,EAAab,IAAb,GAAsB,MAA1B,CAAkC,CAChC,MACE;AACA;AACAC,eAAe,CAACN,IAAD,CAAO,EAAP,CAHjB,EAKD,CACF,CARM,IAQA,CACL,mBACE,oBAAC,IAAD,CAAM,OAAN,EAAc,GAAG,CAAE,UAAYY,GAA/B,CAAoC,SAAS,CAAEJ,WAAW,CAACR,IAAD,CAA1D,EACGA,IAAI,CAACgB,KADR,CADF,CAKD,CACF,CAhDD,IAgDO,CACL;AACA,GAAIhB,IAAI,CAACO,KAAL,CAAW,CAAX,IAAkBG,SAAtB,CAAiC,CAC/B,GAAIV,IAAI,CAACkB,IAAL,CAAU,CAAV,EAAab,IAAb,GAAsB,MAA1B,CAAkC,CAChC,MACE;AACA;AACAC,eAAe,CAACN,IAAD,CAAO,EAAP,CAHjB,EAKD,CACF,CACF,CACF,CAED,MAAO,SAASM,CAAAA,eAAT,CAAyBN,IAAzB,CAA+BY,GAA/B,CAAoCd,KAApC,CAA2C,CAChD,OAAQE,IAAI,CAACK,IAAb,EACE,IAAK,MAAL,CACE,mBACE,oBAAC,IAAD,EACE,GAAG,CAAE,OAASO,GADhB,CAEE,KAAK,CAAEJ,WAAW,CAACR,IAAD,CAFpB,CAGE,IAAI,CAAEA,IAHR,CAIE,aAAa,CAAEmB,aAAa,CAACC,IAAd,CAAmB,IAAnB,CAJjB,CAKE,WAAW,CAAEZ,WAAW,CAACY,IAAZ,CAAiB,IAAjB,CALf,EADF,CASF,IAAK,MAAL,CACE,mBACE,oBAAC,IAAD,EACE,GAAG,CAAER,GADP,CAEE,KAAK,CAAEJ,WAAW,CAACR,IAAD,CAFpB,CAGE,OAAO,CAAEA,IAHX,CAIE,aAAa,CAAEmB,aAAa,CAACC,IAAd,CAAmB,IAAnB,CAJjB,CAKE,WAAW,CAAEZ,WAAW,CAACY,IAAZ,CAAiB,IAAjB,CALf,EADF,CASF,IAAK,MAAL,CACE,mBAAO,oBAAC,IAAD,EAAM,GAAG,CAAER,GAAX,CAAgB,KAAK,CAAEd,KAAvB,CAA8B,KAAK,CAAEU,WAAW,CAACR,IAAD,CAAhD,EAAP,CACF,IAAK,MAAL,CACE,mBAAO,oBAAC,IAAD,EAAM,GAAG,CAAEY,GAAX,CAAgB,IAAI,CAAEZ,IAAtB,CAA4B,KAAK,CAAEQ,WAAW,CAACR,IAAD,CAA9C,EAAP,CACF,IAAK,aAAL,CACE,mBACE,oBAAC,eAAD,EAAiB,GAAG,CAAEY,GAAtB,CAA2B,IAAI,CAAEZ,IAAjC,CAAuC,KAAK,CAAEQ,WAAW,CAACR,IAAD,CAAzD,EADF,CAGF,IAAK,mBAAL,CACE,mBACE,oBAAC,gBAAD,EACE,GAAG,CAAEY,GADP,CAEE,KAAK,CAAEJ,WAAW,CAACR,IAAD,CAFpB,CAGE,IAAI,CAAEA,IAHR,CAIE,aAAa,CAAEmB,aAAa,CAACC,IAAd,CAAmB,IAAnB,CAJjB,CAKE,WAAW,CAAEZ,WAAW,CAACY,IAAZ,CAAiB,IAAjB,CALf,EADF,CASF,IAAK,gBAAL,CACE,mBACE,oBAAC,cAAD,EACE,GAAG,CAAER,GADP,CAEE,KAAK,CAAEJ,WAAW,CAACR,IAAD,CAFpB,CAGE,IAAI,CAAEA,IAHR,CAIE,aAAa,CAAEmB,aAAa,CAACC,IAAd,CAAmB,IAAnB,CAJjB,CAKE,WAAW,CAAEZ,WAAW,CAACY,IAAZ,CAAiB,IAAjB,CALf,CAME,OAAO,CAAEpB,IAAI,CAACO,KANhB,EADF,CAUF,IAAK,MAAL,CACE,mBAAO,oBAAC,QAAD,EAAU,GAAG,CAAEK,GAAf,CAAoB,IAAI,CAAEZ,IAA1B,CAAgC,KAAK,CAAEQ,WAAW,CAACR,IAAD,CAAlD,EAAP,CACF,IAAK,QAAL,CACE,mBACE,oBAAC,MAAD,EACE,GAAG,CAAEY,GADP,CAEE,IAAI,CAAEZ,IAFR,CAGE,KAAK,CAAEA,IAAI,CAACgB,KAHd,CAIE,KAAK,CAAER,WAAW,CAACR,IAAD,CAJpB,EADF,CASF,QACEL,OAAO,CAACC,GAAR,wCAA4CI,IAAI,CAACK,IAAjD,OA/DJ,CAiED,CAED,MAAO,SAASc,CAAAA,aAAT,CAAuBnB,IAAvB,CAA6BY,GAA7B,CAAkC,CACvC,GAAIZ,IAAI,CAACO,KAAL,CAAWH,MAAX,CAAoB,CAAxB,CAA2B,CACzB;AACA,GAAIJ,IAAI,CAACK,IAAL,GAAc,MAAlB,CAA0B,CACxB,MAAOC,CAAAA,eAAe,CAACN,IAAD,CAAO,EAAP,CAAW,IAAX,CAAiB,IAAjB,CAAtB,CACD,CAFD,IAEO,CACL,mBACE,oBAAC,IAAD,CAAM,OAAN,EAAc,GAAG,CAAEY,GAAnB,CAAwB,SAAS,CAAEJ,WAAW,CAACR,IAAD,CAA9C,EACGH,kBAAkB,CAACG,IAAI,CAACO,KAAN,CADrB,CADF,CAKD,CACF,CAXD,IAWO,CACL;AACA,GACEP,IAAI,CAACK,IAAL,GAAc,aAAd,EACAL,IAAI,CAACK,IAAL,GAAc,MADd,EAEAL,IAAI,CAACK,IAAL,GAAc,UAFd,EAGAL,IAAI,CAACK,IAAL,GAAc,QAHd,EAIAL,IAAI,CAACK,IAAL,GAAc,gBALhB,CAME,CACA,MAAOC,CAAAA,eAAe,CAACN,IAAD,CAAOY,GAAP,CAAY,IAAZ,CAAtB,CACD,CARD,IAQO,CACL,MAAOH,CAAAA,aAAa,CAACT,IAAD,CAAOY,GAAP,CAApB,CACD,CACF,CACF,CAED;AACA,MAAO,SAASJ,CAAAA,WAAT,CAAqBR,IAArB,CAA2B,CAChC,GAAIqB,CAAAA,CAAC,GAAL,CAEA,GAAIrB,IAAI,CAACe,GAAT,CAAc,CACZ,GAAIf,IAAI,CAACsB,KAAL,CAAWlB,MAAX,CAAoB,CAAxB,CAA2B,CACzBJ,IAAI,CAACsB,KAAL,CAAWC,OAAX,CAAmB,SAACC,CAAD,CAAO,CACxBH,CAAC,WAAMrB,IAAI,CAACe,GAAX,cAAmBf,IAAI,CAACK,IAAxB,aAAgCL,IAAI,CAACe,GAArC,cAA6Cf,IAAI,CAACK,IAAlD,cAA2DmB,CAAC,CAACR,KAA7D,CAAD,CACD,CAFD,EAGD,CAJD,IAIO,CACLK,CAAC,WAAMrB,IAAI,CAACe,GAAX,cAAmBf,IAAI,CAACK,IAAxB,CAAD,CACD,CACF,CARD,IAQO,CACL,GAAIL,IAAI,CAACsB,KAAL,CAAWlB,MAAX,CAAoB,CAAxB,CAA2B,CACzBJ,IAAI,CAACsB,KAAL,CAAWC,OAAX,CAAmB,SAACC,CAAD,CAAO,CACxBH,CAAC,WAAMrB,IAAI,CAACK,IAAX,aAAmBL,IAAI,CAACK,IAAxB,cAAiCmB,CAAC,CAACR,KAAnC,CAAD,CACD,CAFD,EAGD,CAJD,IAIO,CACLK,CAAC,WAAMrB,IAAI,CAACK,IAAX,CAAD,CACD,CACF,CAED,MAAOgB,CAAAA,CAAP,CACD,CAED;AACA,MAAO,SAASI,CAAAA,uBAAT,CAAiC3B,KAAjC,CAAwCK,IAAxC,CAA8CS,GAA9C,CAAmD,CACxD,MAAOd,CAAAA,KAAK,CAACC,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CAC5B,MAAOyB,CAAAA,WAAW,CAAC1B,IAAD,CAAOG,IAAP,CAAaS,GAAb,CAAlB,CACD,CAFM,CAAP,CAGD,CAED,MAAO,SAASe,CAAAA,eAAT,CAAyBC,gBAAzB,CAA2CzB,IAA3C,CAAiDS,GAAjD,CAAsD,CAC3DgB,gBAAgB,CAACZ,KAAjB,CAAyBb,IAAI,CAACA,IAAL,CAAU0B,GAAnC,CAEA,MAAOV,CAAAA,aAAa,CAAC3B,aAAD,CAAgBoB,GAAhB,CAAqB,UAArB,CAApB,CACD,CAED,MAAO,SAASc,CAAAA,WAAT,CAAqBE,gBAArB,CAAuCzB,IAAvC,CAA6CS,GAA7C,CAAkD,CACvD,GAAIgB,gBAAgB,CAACrB,KAAjB,CAAuBH,MAAvB,CAAgC,CAApC,CAAuC,CACrC;AACA,GAAI0B,gBAAgB,CAACF,gBAAgB,CAACG,IAAlB,CAAwB,EAAxB,CAApB,CAAiD,CAC/C;AACA,MAAOJ,CAAAA,eAAe,CAACC,gBAAD,CAAmBzB,IAAnB,CAAyBS,GAAzB,CAAtB,CACD,CAHD,IAGO,CACL;AACAa,uBAAuB,CAACG,gBAAgB,CAACrB,KAAlB,CAAyBJ,IAAzB,CAA+BS,GAA/B,CAAvB,CACD,CACF,CATD,IASO,CACL;AACA,GAAIkB,gBAAgB,CAACF,gBAAgB,CAACG,IAAlB,CAAwB,EAAxB,CAApB,CAAiD,CAC/C;AACAJ,eAAe,CAACC,gBAAD,CAAmBzB,IAAnB,CAAyBS,GAAzB,CAAf,CACD,CAHD,IAGO,CACL;AACA;AACD,CACF,CACF,CAED,MAAO,SAASkB,CAAAA,gBAAT,CAA0BE,OAA1B,CAAmCC,SAAnC,CAA8C,CACnD,MAAOD,CAAAA,OAAO,GAAKC,SAAnB,CACD","sourcesContent":["import React from \"react\";\nimport handleCreateFormArray from \"./forms/forms\";\n\nimport { forms } from \"../../constants/conf\";\nimport { forecast_data } from \"../../constants/mock\";\n\nimport Form from \"../../components/common/blocks/form/Form\";\nimport Input from \"../../components/ui/inputs/Input\";\nimport List from \"../../components/common/blocks/list/List\";\nimport Card from \"../../components/common/blocks/cards/Card\";\nimport Term from \"../../components/common/elements/list/Term\";\nimport TextDiscription from \"../../components/common/elements/list/TextDiscription\";\nimport GroupDiscription from \"../../components/common/blocks/list/GroupDiscription\";\nimport TextItem from \"../../components/common/elements/list/TextItem\";\nimport CustomBoxInput from \"../../components/ui/groups/CustomBoxInput\";\nimport Button from \"../../components/ui/buttons/Button\";\n\nlet structureCopy = null;\n\nexport function buidCardContent(content) {\n  console.log(\"debug card\", content);\n}\n\nexport function renderElementItems(array) {\n  return array.map((item, i) => {\n    let todo = null;\n\n    if (item.data.length === 0) {\n      // NO data comes from external source, data comes from constants\n\n      if (item.type === \"list\" || item.type === \"discription_group\") {\n        // DOM is a list of any type or group dd\n        // render list !!! type = trough props\n        todo = renderComponent(item, i, null);\n      } else if (item.parts.length > 0) {\n        // Nested DOM\n        todo = (\n          <item.element key={i} className={createClass(item)}>\n            {renderElementItems(item.parts)}\n          </item.element>\n        );\n      } else {\n        // Single DOM\n        if (\n          item.type === \"discription\" ||\n          item.type === \"term\" ||\n          item.type === \"textItem\" ||\n          item.type === \"button\" ||\n          item.type === \"customBoxInput\"\n        ) {\n          return renderComponent(item, i, null);\n        } else {\n          todo = renderElement(item, i, null);\n        }\n      }\n    } else {\n      // data comes from external source, data does NOT come from constants\n      if (item.parts[0] !== undefined) {\n        const data = forecast_data;\n        if (item.parts.length > 0) {\n          // Nested DOM\n\n          structureCopy = item.parts[0];\n\n          todo = (\n            <item.element key={i} className={createClass(item)}>\n              {data.map((dataItem, i) => {\n                // What do we have? data & print of structure. need structure ask custom data and what overide it with data from dataitem\n                return item.parts[0].type === \"card\"\n                  ? // before render merge data into structure\n                    (todo = renderComponent(item.parts[0], \"card\" + i))\n                  : null;\n                //   handleMerge(structureCopy, dataItem, \"card\")\n                // : null;\n              })}\n            </item.element>\n          );\n        }\n      }\n    }\n\n    return todo;\n  });\n}\n\nexport function renderElement(item, key) {\n  if (item.data.length === 0) {\n    // NO data comes from external source, data comes from constants\n    if (item.type === \"form\") {\n      // DOM is a form\n      // collect the form data\n      const array = handleCreateFormArray(\n        forms,\n        null,\n        item.id,\n        null,\n        null,\n        null\n      );\n\n      // render form\n      return renderComponent(item, \"form\" + key, array);\n      // return <Form key={\"form\" + key} array={array} />;\n    } else if (item.id.includes(\"wi\")) {\n      return (\n        // DOM is a input of any kind\n        // render input !!! type = trough props\n        <Input\n          class={createClass(item)}\n          base={item.ref}\n          type={item.type}\n          id={item.id}\n          name={item.id}\n          placeholder={item.label}\n          required={item.required}\n          reference={item.ref}\n          key={\"input\" + key}\n        />\n      );\n    } else if (item.parts[0] !== undefined) {\n      if (item.part[0].type === \"card\") {\n        return (\n          // DOM is a card\n          // render card !!! content = interactive created by creatElement\n          renderComponent(item, \"\")\n        );\n      }\n    } else {\n      return (\n        <item.element key={\"element\" + key} className={createClass(item)}>\n          {item.label}\n        </item.element>\n      );\n    }\n  } else {\n    // data comes from external source, data does NOT come from constants\n    if (item.parts[0] !== undefined) {\n      if (item.part[0].type === \"card\") {\n        return (\n          // DOM is a card\n          // render card !!! content = interactive created by creatElement\n          renderComponent(item, \"\")\n        );\n      }\n    }\n  }\n}\n\nexport function renderComponent(item, key, array) {\n  switch (item.type) {\n    case \"list\":\n      return (\n        <List\n          key={\"list\" + key}\n          class={createClass(item)}\n          item={item}\n          createElement={createElement.bind(this)}\n          createClass={createClass.bind(this)}\n        />\n      );\n    case \"card\":\n      return (\n        <Card\n          key={key}\n          class={createClass(item)}\n          content={item}\n          createElement={createElement.bind(this)}\n          createClass={createClass.bind(this)}\n        />\n      );\n    case \"form\":\n      return <Form key={key} array={array} class={createClass(item)} />;\n    case \"term\":\n      return <Term key={key} item={item} class={createClass(item)} />;\n    case \"discription\":\n      return (\n        <TextDiscription key={key} item={item} class={createClass(item)} />\n      );\n    case \"discription_group\":\n      return (\n        <GroupDiscription\n          key={key}\n          class={createClass(item)}\n          item={item}\n          createElement={createElement.bind(this)}\n          createClass={createClass.bind(this)}\n        />\n      );\n    case \"customBoxInput\":\n      return (\n        <CustomBoxInput\n          key={key}\n          class={createClass(item)}\n          item={item}\n          createElement={createElement.bind(this)}\n          createClass={createClass.bind(this)}\n          content={item.parts}\n        />\n      );\n    case \"item\":\n      return <TextItem key={key} item={item} class={createClass(item)} />;\n    case \"button\":\n      return (\n        <Button\n          key={key}\n          item={item}\n          label={item.label}\n          class={createClass(item)}\n        />\n      );\n\n    default:\n      console.log(`ERROR: no types are matching ${item.type}.`);\n  }\n}\n\nexport function createElement(item, key) {\n  if (item.parts.length > 0) {\n    // Nested DOM\n    if (item.type === \"card\") {\n      return renderComponent(item, \"\", null, null);\n    } else {\n      return (\n        <item.element key={key} className={createClass(item)}>\n          {renderElementItems(item.parts)}\n        </item.element>\n      );\n    }\n  } else {\n    // Single DOM\n    if (\n      item.type === \"discription\" ||\n      item.type === \"term\" ||\n      item.type === \"textItem\" ||\n      item.type === \"button\" ||\n      item.type === \"customBoxInput\"\n    ) {\n      return renderComponent(item, key, null);\n    } else {\n      return renderElement(item, key);\n    }\n  }\n}\n\n// add styling and SCSS\nexport function createClass(item) {\n  let c = ``;\n\n  if (item.ref) {\n    if (item.class.length > 0) {\n      item.class.forEach((e) => {\n        c = `${item.ref}__${item.type} ${item.ref}__${item.type}--${e.label}`;\n      });\n    } else {\n      c = `${item.ref}__${item.type}`;\n    }\n  } else {\n    if (item.class.length > 0) {\n      item.class.forEach((e) => {\n        c = `${item.type} ${item.type}--${e.label}`;\n      });\n    } else {\n      c = `${item.type}`;\n    }\n  }\n\n  return c;\n}\n\n// add data\nexport function handleMergeElementItems(array, data, key) {\n  return array.map((item, i) => {\n    return handleMerge(item, data, key);\n  });\n}\n\nexport function handleMergeData(structureElement, data, key) {\n  structureElement.label = data.data.day;\n\n  return createElement(structureCopy, key, \"new data\");\n}\n\nexport function handleMerge(structureElement, data, key) {\n  if (structureElement.parts.length > 0) {\n    // nested structure\n    if (handleCheckIfNot(structureElement.link, \"\")) {\n      // data needed in this layer\n      return handleMergeData(structureElement, data, key);\n    } else {\n      // NO data needed in this layer\n      handleMergeElementItems(structureElement.parts, data, key);\n    }\n  } else {\n    // single dom\n    if (handleCheckIfNot(structureElement.link, \"\")) {\n      // data needed in this layer\n      handleMergeData(structureElement, data, key);\n    } else {\n      // NO data needed in this layer\n      // renderComponent(structureElement, key);\n    }\n  }\n}\n\nexport function handleCheckIfNot(element, condition) {\n  return element !== condition;\n}\n"]},"metadata":{},"sourceType":"module"}